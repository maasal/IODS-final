as.data.frame(as.list(practice)[2])[1]
as.data.frame(as.list(practice)[2])[1]
framez <- data.frame()
str(tickers)
framez <- colnames(c("Symbol","P"))
framez
framez[1,] <- c("apl",1.3)
framez[,1] <- c("apl",1.3)
framez
framez[1]
framez[1,1]
framez[1,]
framez[1,] <- c("apl",1.3)
framez[,] <- c("apl",1.3)
c("apl",1.3)
framez <- c("apl",1.2)
framez
framez <- as.data.frame(framez,colnames(framez[1:2]))
framez
matrix(1,2)
matrix(NULL,2,2)
matrix(,2,2)
framez <- matrix(,2,2)
colnames(framez) <- c("Symbol","PriceNow")
framez
framez[1,] <- c("APA",1.2)
framez
matrix(,3,4)
as.data.frame(as.list(practice)[2])[1]
as.data.frame(as.list(practice)[3])[1]
c(as.data.frame(as.list(practice)[3])[1],as.character(as.list(practice)))
c(as.data.frame(as.list(practice)[3])[1],as.character(as.list(practice)[3]))
ls.print(practice)
ls.diag(practice)
as.list(practice)
as.list(practice)[1]
as.character(as.list(practice)[1])
as.character(as.list(practice)[0,1])
as.character(as.list(practice)[1][1])
as.character(as.list(practice)[1])
as.character(as.list(practice)[1,1])
as.character(as.data.frame(as.list(practice)[1]))
as.data.frame(as.list(practice)[1])
as.list.data.frame(practice)
as.list(practice)[]
as.list(practice)[]$1
names(as.list(practice)[])
names(as.list(practice)[1])
as.numeric(as.list(practice)[1])
as.character(as.list(practice)[1])
as.character(as.list(practice)[1])[1]
as.data.frame(as.list(practice)[1])[1]
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
for (i in len){
frame[i,1] <- as.data.frame(as.list(environ)[i])[1]
}
}
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
for (i in len){
frame[i,1] <- as.data.frame(as.list(environ)[i])[1]
}
return(frame)
}
test <- unravel(newprices)
test
length(as.list(newprices))
matrix(,144,2)
framez <- matrix(,144,2)
framez[,2] <- names(as.list(newprices))
names(as.list(newprices))
length(as.list(newprices))
framez <- matrix(,114,2)
framez[,2] <- names(as.list(newprices))
framez
colnames(framez) <- c("Symbol","NewPrice")
summary(framez)
framez[5,1] <- as.data.frame(as.list(newprices)[5])[1]
framez
framez <- matrix(,114,2)
framez[,2] <- names(as.list(newprices))
framez
colnames(framez) <- c("Symbol","NewPrice")
framez <- as.data.frame(framez)
framez
framez[5,1] <- as.data.frame(as.list(newprices)[5])[1]
as.list(newprices)[5]
as.data.frame(as.list(newprices)[5])
as.data.frame(as.list(newprices)[5])[1]
as.data.frame(as.list(newprices)[5])[1,1]
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
for (i in len){
frame[i,1] <- as.data.frame(as.list(environ)[i])[1,1]
}
return(frame)
}
test <- unravel(newprices)
test
as.data.frame(as.list(newprices)[5])[1,1]
framez[5,1] <- as.data.frame(as.list(newprices)[5])[1,1]
framez[5,1] <- as.numeric(as.data.frame(as.list(newprices)[5])[1,1])
framez
framez[5,1] <- as.character(as.data.frame(as.list(newprices)[5])[1,1])
framez[,]
framez[,1]
framez[1,1]
framez <- matrix(0,114,2)
framez[,2] <- names(as.list(newprices))
framez
colnames(framez) <- c("Symbol","NewPrice")
framez <- as.data.frame(framez)
summary(framez)
framez[5,1] <- as.data.frame(as.list(newprices)[5])[1,1]
framez
as.data.frame(as.list(newprices)[5])[1,1]
temp[5] <- as.data.frame(as.list(newprices)[5])[1,1]
temp[1] <- as.data.frame(as.list(newprices)[5])[1,1]
temp <- as.data.frame(as.list(newprices)[5])[1,1]
temp[2] <- as.data.frame(as.list(newprices)[5])[1,1]
temp
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in len-1){
temp[i+1,1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frmae[,1] <- temp
return(frame)
}
test <- unravel(newprices)
test
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(frame)
}
test <- unravel(newprices)
test
rm(temp)
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(frame)
}
test <- unravel(newprices)
test
rowbind(c(1,2),c(2,2))
rowBind(c(1,2),c(2,2))
rbind(c(1,1),c(33,3))
cbind(c(1,1),c(33,3))
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(fcbind(temp,names(as.list(environ))))
}
test <- unravel(newprices)
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(cbind(temp,names(as.list(environ))))
}
test <- unravel(newprices)
test
temp[1] <- as.data.frame(as.list(environ)[1])[1,1]
temp[1] <- as.data.frame(as.list(newprices)[1])[1,1]
temp <- as.data.frame(as.list(newprices)[1])[1,1]
temp
temp
temp[2] <- as.data.frame(as.list(environ)[1+1])[1,1]
temp[2] <- as.data.frame(as.list(newprices)[1+1])[1,1]
temp
temp[1+114] <- as.data.frame(as.list(newprices)[1+114])[1,1]
temp[1+113] <- as.data.frame(as.list(newprices)[1+113])[1,1]
temp
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(cbind(temp,names(as.list(environ))))
}
test <- unravel(newprices)
test
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(cbind(temp,names(as.list(environ)),frame))
}
test <- unravel(newprices)
test
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(frame)
}
test <- unravel(newprices)
test
as.numeric(test[,1])
test <- as.numeric(test[,1])
test
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,2] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,1] <- temp
return(frame)
}
newP <- unravel(newprices)
newP[,1] <- as.numeric(test[,1])
test
newP[,1] <- as.numeric(newP[,1])
newP
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,1] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,2] <- temp
return(frame)
}
newP <- unravel(newprices)
newP[,1] <- as.numeric(newP[,1])
newP
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,1] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,2] <- temp
return(frame)
}
newP <- unravel(newprices)
newP[,2] <- as.numeric(newP[,2])
newP
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,1] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,2] <- as.numeric(temp)
return(frame)
}
newP
str(newP)
library(quantmod)
newprices <- new.env()
getSymbols(as.character(tickers[,1]), src = 'yahoo', from = '2017-01-05', to = '2017-01-05', env = newprices, auto.assign = T)
tickers
tickers[66,]
tickers[66:,]
tickers[66:.,]
tickers[-1:66,]
tickers[-1:66,]
tickers[-166,]
tickers[-(1:66),]
tickers <- tickers[-115,]
newprices <- new.env()
getSymbols(as.character(tickers[,1]), src = 'yahoo', from = '2017-01-05', to = '2017-01-05', env = newprices, auto.assign = T)
tickers[-(1:115),]
tickers[-(1:182),]
tickers[-(1:249),]
tickers <- tickers[c(-115,303),]
tickers <- tickers[-c(115,303),]
dim(tickers)
setwd("~/Documents/IODS/git/IODS-final/data/")
tickers <- read.csv("tickers.csv",header=TRUE,sep = ",",dec = ".",na.strings = "")
library(dplyr)
summary(tickers)
tickers <- select(tickers, -SEC.Filings)
head(tickers)
str(tickers)
dim(tickers)
tickers_comp <- complete.cases(tickers)
tickers <- tickers[tickers_comp,]
dim(tickers)
str(tickers)
tickers <- mutate(tickers, diff = ((X52.week.high - X52.week.low)/Price*100))
head(tickers)
colnames(tickers)
tickers <- rename(tickers, Div = Dividend.Yield, PE = Price.Earnings,
EPS = Earnings.Share, BV = Book.Value, Low = X52.week.low,
High = X52.week.high, Mval = Market.Cap, PS = Price.Sales,
PB = Price.Book)
colnames(tickers)
as.character(tickers[1,1])
tickers[-(1:249),]
tickers <- tickers[-c(115,303),]
dim(tickers)
newprices <- new.env()
getSymbols(as.character(tickers[,1]), src = 'yahoo', from = '2017-01-05', to = '2017-01-05', env = newprices, auto.assign = T)
tickers[-c(1:303),]
tickers[-c(1:303),c(1,2)]
setwd("~/Documents/IODS/git/IODS-final/data/")
tickers <- read.csv("tickers.csv",header=TRUE,sep = ",",dec = ".",na.strings = "")
library(dplyr)
summary(tickers)
tickers <- select(tickers, -SEC.Filings)
head(tickers)
str(tickers)
dim(tickers)
tickers_comp <- complete.cases(tickers)
tickers <- tickers[tickers_comp,]
dim(tickers)
str(tickers)
tickers <- mutate(tickers, diff = ((X52.week.high - X52.week.low)/Price*100))
head(tickers)
colnames(tickers)
tickers <- rename(tickers, Div = Dividend.Yield, PE = Price.Earnings,
EPS = Earnings.Share, BV = Book.Value, Low = X52.week.low,
High = X52.week.high, Mval = Market.Cap, PS = Price.Sales,
PB = Price.Book)
tickers[-c(1:337),c(1,2)]
tickers <- tickers[-c(115,303,337),]
dim(tickers)
library(quantmod)
newprices <- new.env()
getSymbols(as.character(tickers[,1]), src = 'yahoo', from = '2017-01-05', to = '2017-01-05', env = newprices, auto.assign = T)
ls.str(newprices)
str(newprices)
unravel <- function(environ){
len <- length(as.list(environ))
frame <- matrix(0,len,2)
frame[,1] <- names(as.list(environ))
colnames(frame) <- c("Symbol","NewPrice")
frame <- as.data.frame(frame)
temp <- as.data.frame(as.list(environ)[1])[1,1]
for (i in 1:len-1){
temp[i+1] <- as.data.frame(as.list(environ)[i+1])[1,1]
}
frame[,2] <- as.numeric(temp)
return(frame)
}
newP <- unravel(newprices)
newP
str(newP)
newP
str(newP)
dim(tickers)
dim(newP)
tickers[,1] %in% newP[,1]
colnames(tickers)
colnames(new)
colnames(newP)
financial <- inner_join(tickers,newP,by = Symbol)
tickers[,1] == newP[,1]
tickers[,1] %in% newP[,1]
cbind(tickers[,1],newP[,1])
cbind(tickers[,2],newP[,1])
cbind(tickers,newP)
cbind(tickers[,1],newP)
cbind(tickers[,1],newP[,1])
cbind(tickers[,1],newP[,2])
cbind(tickers[,1],newP[,])
financial <- inner_join(tickers,newP,by = 'Symbol')
financial
financial[1:5,]
tickers[1:5,]
newP[1:5,]
newP[,]
newP[173,]
financial[1:5,]
newP
financial[1:5,]
newP
financial[1:5,]
newP[c(173,371),]
financial[1:5,]
str(financial)
financial <- mutate(financial, P = (NewPrice - Price) / Price)
financial <- select(financial, one_of(c("Symbol","Name","Sector","Div","PE","PS","PB","diff"))
financial <- select(financial, one_of(c("Symbol","Name","Sector","Div","PE","PS","PB","diff"))
)
financial <- select(financial, one_of(c("Symbol","Name","Sector","Div","PE","PS","PB","diff")))
financial
newP
str(newP)
dim(tickers)
dim(newP)
tickers[,1] %in% newP[,1]
colnames(newP)
cbind(tickers[,1],newP[,])
financial <- inner_join(tickers,newP,by = 'Symbol')
financial[1:2,]
newP[c(173,371),]
str(financial)
financial <- mutate(financial, P = (NewPrice - Price) / Price *100)
financial <- select(financial, one_of(c("Symbol","Name","Sector","Div","PE","PS","PB","diff","P")))
financial
model <- lm(formula = P ~ PE + PB + PS + diff + Div + Sector,data = financial)
summary(model)
plot(model)
quantile(x = financial$P)
split(financial$P,f = quantile(x = financial$P))
lm(formula = split(financial$P,f = quantile(x = financial$P)) ~ PE + PB + PS + diff + Div + Sector,data = financial)
pairs(financial)
pairs(cor(financial))
financial
pairs(cor(financial[,-c(1:3)]))
plot(financial$P,financial$PS)
rownames(financial) <- financial$Name
financial
rownames(financial) <- financial$Symbol
financial
financial <- select(financial, one_of(c("Sector","Div","PE","PS","PB","diff","P")))
financial
str(financial)
library(GGally)
library(corrplot)
ggpairs(human)
ggpairs(financial)
cor(human) %>% round(digits=2) %>% corrplot.mixed(tl.cex = 0.7,number.cex=0.7,order="hclust",addrect=2)
cor(financial) %>% round(digits=2) %>% corrplot.mixed(tl.cex = 0.7,number.cex=0.7,order="hclust",addrect=2)
cor(financial[,-1]) %>% round(digits=2) %>% corrplot.mixed(tl.cex = 0.7,number.cex=0.7,order="hclust",addrect=2)
str(financial)
write.csv(x = financial, file = "financial.csv")
dat <- read.csv("financial.csv")
str(dat)
dat <- read.csv("financial.csv",row.names = X)
dat <- read.csv("financial.csv",row.names = "X")
str(dat)
dat
